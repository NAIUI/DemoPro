// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: api/rpc_node.proto

package org.chainmaker.pb.api;

public final class RpcNodeOuterClass {
  private RpcNodeOuterClass() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022api/rpc_node.proto\022\003api\032\024common/reques" +
      "t.proto\032\023common/result.proto\032\031config/loc" +
      "al_config.proto\032\027config/log_config.proto" +
      "\032\036config/chainmaker_server.proto\032\034google" +
      "/api/annotations.proto\032\035txpool/transacti" +
      "on_pool.proto2\212\007\n\007RpcNode\022P\n\013SendRequest" +
      "\022\021.common.TxRequest\032\022.common.TxResponse\"" +
      "\032\202\323\344\223\002\024\"\017/v1/sendrequest:\001*\022;\n\tSubscribe" +
      "\022\021.common.TxRequest\032\027.common.SubscribeRe" +
      "sult\"\0000\001\022U\n\013SubscribeWS\022\024.common.RawTxRe" +
      "quest\032\027.common.SubscribeResult\"\025\202\323\344\223\002\017\022\r" +
      "/v1/subscribe0\001\022N\n\021UpdateDebugConfig\022\032.c" +
      "onfig.DebugConfigRequest\032\033.config.DebugC" +
      "onfigResponse\"\000\022O\n\026RefreshLogLevelsConfi" +
      "g\022\030.config.LogLevelsRequest\032\031.config.Log" +
      "LevelsResponse\"\000\022s\n\024GetChainMakerVersion" +
      "\022 .config.ChainMakerVersionRequest\032!.con" +
      "fig.ChainMakerVersionResponse\"\026\202\323\344\223\002\020\022\016/" +
      "v1/getversion\022o\n\030CheckNewBlockChainConfi" +
      "g\022\'.config.CheckNewBlockChainConfigReque" +
      "st\032(.config.CheckNewBlockChainConfigResp" +
      "onse\"\000\022E\n\rGetPoolStatus\022\034.txpool.GetPool" +
      "StatusRequest\032\024.txpool.TxPoolStatus\"\000\022i\n" +
      "\026GetTxIdsByTypeAndStage\022%.txpool.GetTxId" +
      "sByTypeAndStageRequest\032&.txpool.GetTxIds" +
      "ByTypeAndStageResponse\"\000\022`\n\023GetTxsInPool" +
      "ByTxIds\022\".txpool.GetTxsInPoolByTxIdsRequ" +
      "est\032#.txpool.GetTxsInPoolByTxIdsResponse" +
      "\"\000B?\n\025org.chainmaker.pb.apiZ&chainmaker." +
      "org/chainmaker/pb-go/v2/apib\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          org.chainmaker.pb.common.Request.getDescriptor(),
          org.chainmaker.pb.common.ResultOuterClass.getDescriptor(),
          org.chainmaker.pb.config.LocalConfig.getDescriptor(),
          org.chainmaker.pb.config.LogConfig.getDescriptor(),
          org.chainmaker.pb.config.ChainmakerServer.getDescriptor(),
          com.google.api.AnnotationsProto.getDescriptor(),
          org.chainmaker.pb.txpool.TransactionPool.getDescriptor(),
        });
    com.google.protobuf.ExtensionRegistry registry =
        com.google.protobuf.ExtensionRegistry.newInstance();
    registry.add(com.google.api.AnnotationsProto.http);
    com.google.protobuf.Descriptors.FileDescriptor
        .internalUpdateFileDescriptor(descriptor, registry);
    org.chainmaker.pb.common.Request.getDescriptor();
    org.chainmaker.pb.common.ResultOuterClass.getDescriptor();
    org.chainmaker.pb.config.LocalConfig.getDescriptor();
    org.chainmaker.pb.config.LogConfig.getDescriptor();
    org.chainmaker.pb.config.ChainmakerServer.getDescriptor();
    com.google.api.AnnotationsProto.getDescriptor();
    org.chainmaker.pb.txpool.TransactionPool.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
